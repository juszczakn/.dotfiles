;-*-Lisp-*-

;; Can only start swank if stumpwm
;; was compiled with sbcl, due to
;; threading issues.
(require 'swank)
(swank:create-server)

(in-package :stumpwm)

;; Custom keybindings
(defcommand screen-saver () ()
  (run-shell-command "gnome-screensaver-command -l"))
(defcommand xterminal () ()
  (run-shell-command "x-terminal-emulator"))
(defcommand clementine-cmd (flag) (:string)
  (run-shell-command (concat "clementine " flag)))

(defcommand firefox () ()
  (run-or-raise "firefox" '(:class "Firefox")))
(defcommand thunderbird () ()
  (run-or-raise "thunderbird" '(:class "Thunderbird")))
(defcommand clementine () ()
  (run-or-raise "clementine" '(:class "Clementine")))
(defcommand xchat () ()
  (run-or-raise "xchat" '(:class "Xchat")))
(defcommand pidgin () ()
  (run-or-raise "pidgin" '(:class "Pidgin")))


;; top level mappings
(define-key *top-map* (kbd "s-Up") "move-window up")
(define-key *top-map* (kbd "s-Right") "move-window right")
(define-key *top-map* (kbd "s-Left") "move-window left")
(define-key *top-map* (kbd "s-Down") "move-window down")

(define-key *top-map* (kbd "C-M-Right") "gnext")
(define-key *top-map* (kbd "C-M-Left") "gprev")

(define-key *top-map* (kbd "M-Tab") "pull-hidden-next")
(define-key *top-map* (kbd "s-Tab") "pull-hidden-previous")

;; root level mappings
(define-key *root-map* (kbd "M-l") "screen-saver")
(define-key *root-map* (kbd "c") "xterminal")
(define-key *root-map* (kbd "C-c") "xterminal")

(define-key *root-map* (kbd "F11") "restore-window-placement-rules")
(define-key *root-map* (kbd "F12") "dump-window-placement-rules")

(setf *launcher-keybindings*
 (let ((launch-map (make-sparse-keymap)))
   (define-key launch-map (kbd "f") "firefox")
   (define-key launch-map (kbd "e") "emacs")
   (define-key launch-map (kbd "t") "thunderbird")
   (define-key launch-map (kbd "c") "clementine")
   (define-key launch-map (kbd "x") "xchat")
   (define-key launch-map (kbd "p") "pidgin")
   launch-map))

(define-key *root-map* (kbd "l") '*launcher-keybindings*)
(define-key *root-map* (kbd "C-l") '*launcher-keybindings*)

;; Click to focus
(setf *mouse-focus-policy* :click)

;;;; modeline, might use in future
;; (setf *mode-line-background-color* "Black"
;;       *mode-line-foreground-color* "Grey"
;;       *mode-line-border-color* "Grey"
;;       *mode-line-timeout* 1
;;       *mode-line-position* :bottom)
;; (setf *screen-mode-line-format*
;;       (list "%g %W | "
;;             '(:eval (run-shell-command "date" t))))
;;(mode-line)

;;; Window Appearance
(setf *normal-border-width* 1
      *maxsize-border-width* 1
      *transient-border-width* 1
      *window-border-style* :thin) ; :thick :thin :tight :none

;;;; Setup stuff
(set-contrib-dir "~/workspace/cl/stumpwm-contrib")
(load-module "amixer")

(define-key *top-map* (kbd "XF86AudioLowerVolume") "amixer-Front-1-")
(define-key *top-map* (kbd "XF86AudioRaiseVolume") "amixer-Front-1+")
(define-key *top-map* (kbd "XF86AudioMute") "amixer-Master-toggle pulse")
(define-key *top-map* (kbd "XF86AudioPlay") "clementine-cmd -t")

;;--------------------------------------------------------------------
(defvar *default-frames* "~/.stump/default-frames")
(defvar *default-placements* "~/.stump/default-placements")

(run-shell-command "~/.swapkeys.sh")
(restore-from-file *default-frames*)
(restore-window-placement-rules *default-placements*)

;; startup command
(run-shell-command "~/.scripts/startup.sh")

(defcommand save-and-quit () ()
  (dump-desktop-to-file *default-frames*)
  (dump-window-placement-rules *default-placements*)
  (quit))
