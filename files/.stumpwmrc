 t;-*-Lisp-*-

;; Can only start swank if stumpwm
;; was compiled with sbcl, due to
;; threading issues.
(require 'swank)
(swank:create-server)

(in-package :stumpwm)

;; Custom keybindings
(defcommand screen-saver () ()
  (run-shell-command "gnome-screensaver-command -l"))
(defcommand xterminal () ()
  (run-shell-command "x-terminal-emulator"))

;; (defcommand testing (string) ((:rest "stuff"))
;;   (let ((*executing-stumpwm-command* nil))
;;     (message "~a" string)))
;; (define-key *root-map* (kbd "[") "testing a")

(define-key *root-map* (kbd "M-l") "screen-saver")
(define-key *root-map* (kbd "c") "xterminal")
(define-key *root-map* (kbd "C-c") "xterminal")

(define-key *top-map* (kbd "C-M-Up") "move-window up")
(define-key *top-map* (kbd "C-M-Right") "move-window right")
(define-key *top-map* (kbd "C-M-Left") "move-window left")
(define-key *top-map* (kbd "C-M-Down") "move-window down")

(define-key *root-map* (kbd "F11") "restore-window-placement-rules")
(define-key *root-map* (kbd "F12") "dump-window-placement-rules ~/.stump/stump-placements-test")

;; Click to focus
(setf *mouse-focus-policy* :click)

;;;; modeline, might use in future
;; (setf *mode-line-background-color* "Black"
;;       *mode-line-foreground-color* "Grey"
;;       *mode-line-border-color* "Grey"
;;       *mode-line-timeout* 1
;;       *mode-line-position* :bottom)
;; (setf *screen-mode-line-format*
;;       (list "%g %W | "
;;             '(:eval (run-shell-command "date" t))))
;;(mode-line)

;;; Window Appearance
(setf *normal-border-width* 0
      *maxsize-border-width* 0
      *transient-border-width* 1
      *window-border-style* :thin) ; :thick :thin :tight :none

;;;; Setup stuff
(set-contrib-dir "~/workspace/cl/stumpwm-contrib")
(load-module "amixer")

(define-key *top-map* (kbd "XF86AudioLowerVolume") "amixer-Front-1-")
(define-key *top-map* (kbd "XF86AudioRaiseVolume") "amixer-Front-1+")
(define-key *top-map* (kbd "XF86AudioMute") "amixer-Master-toggle pulse")

(restore-from-file "~/.stump/stump-frames")
(restore-window-placement-rules "~/.stump/stump-placements")
;;--------------------------------------------------------------------
;; startup command
(run-shell-command "~/.scripts/startup.sh")
